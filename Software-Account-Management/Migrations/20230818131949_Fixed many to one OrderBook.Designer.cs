// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Software_Account_Management.Data;

#nullable disable

namespace Software_Account_Management.Migrations
{
    [DbContext(typeof(Software_Account_ManagementContext))]
    [Migration("20230818131949_Fixed many to one OrderBook")]
    partial class FixedmanytooneOrderBook
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Software_Account_Management.Models.AppLicense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AppName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AppService")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("LicenseStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SpaceId")
                        .HasColumnType("int");

                    b.Property<string>("TestStationPool")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("AppLicenses");
                });

            modelBuilder.Entity("Software_Account_Management.Models.LicenseOrderBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid?>("AppLicenseId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CompletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InstanceId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ReservationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ReservedByUser")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReservedForSut")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TestStation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TestStationTaskId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AppLicenseId");

                    b.ToTable("LicenseOrderBooks");
                });

            modelBuilder.Entity("Software_Account_Management.Models.LicenseQueue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("AppLicenseId")
                        .HasColumnType("char(36)");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppLicenseId");

                    b.HasIndex("ReservationId");

                    b.ToTable("licenseQueues");
                });

            modelBuilder.Entity("Software_Account_Management.Models.LicenseOrderBook", b =>
                {
                    b.HasOne("Software_Account_Management.Models.AppLicense", "AppLicense")
                        .WithMany()
                        .HasForeignKey("AppLicenseId");

                    b.Navigation("AppLicense");
                });

            modelBuilder.Entity("Software_Account_Management.Models.LicenseQueue", b =>
                {
                    b.HasOne("Software_Account_Management.Models.AppLicense", "AppLicense")
                        .WithMany("Queue")
                        .HasForeignKey("AppLicenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Software_Account_Management.Models.LicenseOrderBook", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppLicense");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Software_Account_Management.Models.AppLicense", b =>
                {
                    b.Navigation("Queue");
                });
#pragma warning restore 612, 618
        }
    }
}
