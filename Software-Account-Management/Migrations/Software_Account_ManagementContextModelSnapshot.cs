// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Software_Account_Management.Data;

#nullable disable

namespace Software_Account_Management.Migrations
{
    [DbContext(typeof(Software_Account_ManagementContext))]
    partial class Software_Account_ManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Software_Account_Management.Models.AppLicense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AppName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AppService")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("LicenseOrderBookId")
                        .HasColumnType("int");

                    b.Property<bool>("LicenseStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SpaceId")
                        .HasColumnType("int");

                    b.Property<string>("TestStationPool")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("LicenseOrderBookId");

                    b.ToTable("AppLicenses");
                });

            modelBuilder.Entity("Software_Account_Management.Models.LicenseOrderBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("AppLicenseId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CompletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EstCompletionTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Framework")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Orchestrator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ReservationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ReservedByUser")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TestCaseID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TestStationName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AppLicenseId");

                    b.ToTable("LicenseOrderBooks");
                });

            modelBuilder.Entity("Software_Account_Management.Models.AppLicense", b =>
                {
                    b.HasOne("Software_Account_Management.Models.LicenseOrderBook", "Reservation")
                        .WithMany()
                        .HasForeignKey("LicenseOrderBookId");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("Software_Account_Management.Models.LicenseOrderBook", b =>
                {
                    b.HasOne("Software_Account_Management.Models.AppLicense", "AppLicense")
                        .WithMany()
                        .HasForeignKey("AppLicenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppLicense");
                });
#pragma warning restore 612, 618
        }
    }
}
